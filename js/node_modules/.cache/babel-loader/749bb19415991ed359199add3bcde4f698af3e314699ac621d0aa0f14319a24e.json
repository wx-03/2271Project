{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pingh\\\\OneDrive\\\\Desktop\\\\CG2271\\\\Project\\\\js\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\n\n// Function to convert joystick positions to wheel speeds\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction joystickToWheelSpeeds(x, y) {\n  // Normalize the speeds to ensure they are within the maximum possible range\n  const angle = Math.atan2(y, x) % (Math.PI / 2);\n  var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\n\n  // Reverse x direction if moving backward\n  if (y < 0) {\n    x = -x;\n    maxSpeed = 2 + maxSpeed;\n  }\n\n  // Calculate the wheel speeds\n  let leftWheelSpeed = y + x;\n  let rightWheelSpeed = y - x;\n\n  // Avoid division by zero in normalization\n  if (maxSpeed !== 0) {\n    leftWheelSpeed /= maxSpeed;\n    rightWheelSpeed /= maxSpeed;\n  }\n  return {\n    leftWheelSpeed: leftWheelSpeed,\n    rightWheelSpeed: rightWheelSpeed\n  };\n}\n\n// Function to map wheel speed to a 4-bit value (0-15)\nfunction mapSpeedTo4Bit(speed) {\n  return Math.round((speed + 1) * 7.5);\n}\n\n// Function to combine two 4-bit values into a single 8-bit value\nfunction combine4BitValues(left4Bit, right4Bit) {\n  return left4Bit << 4 | right4Bit;\n}\nexport function Test() {\n  _s();\n  const [joystickPos, setJoystickPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [binarySpeed, setBinarySpeed] = useState(119);\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\n  const [currTime, setCurrTime] = useState(Date.now());\n  function callReq() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: binarySpeed\n    }));\n  }\n  function callStop() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: \"01110111\"\n    }));\n  }\n  const handleMove = stick => {\n    setJoystickPos({\n      x: stick.x,\n      y: stick.y\n    });\n    const {\n      leftWheelSpeed,\n      rightWheelSpeed\n    } = joystickToWheelSpeeds(stick.x, stick.y);\n\n    // Convert wheel speeds to 4-bit values\n    const leftWheel4Bit = mapSpeedTo4Bit(leftWheelSpeed);\n    const rightWheel4Bit = mapSpeedTo4Bit(rightWheelSpeed);\n    setLeftWheelSpeed(leftWheel4Bit);\n    setRightWheelSpeed(rightWheel4Bit);\n    const combined8BitValue = combine4BitValues(leftWheel4Bit, rightWheel4Bit);\n\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\n    setBinarySpeed(combined8BitValue);\n    if (Date.now() - currTime > 1000) {\n      setCurrTime(Date.now());\n      callReq();\n    }\n    console.log(\"Combined 8-bit Value (Binary):\", combined8BitValue);\n  };\n  const handleStop = () => {\n    setJoystickPos({\n      x: 0,\n      y: 0\n    });\n    setBinarySpeed(\"01110111\");\n    callStop();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Joystick, {\n      pos: joystickPos,\n      move: handleMove,\n      stop: handleStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"{text-align: center;}\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Binary Speed: \", binarySpeed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Left Speed: \", leftWheelSpeed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Right Speed: \", rightWheelSpeed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"rx/csifYshLgmvG0+1FwVgxnJyQ=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","Joystick","jsxDEV","_jsxDEV","joystickToWheelSpeeds","x","y","angle","Math","atan2","PI","maxSpeed","sqrt","sin","leftWheelSpeed","rightWheelSpeed","mapSpeedTo4Bit","speed","round","combine4BitValues","left4Bit","right4Bit","Test","_s","joystickPos","setJoystickPos","binarySpeed","setBinarySpeed","setLeftWheelSpeed","setRightWheelSpeed","currTime","setCurrTime","Date","now","callReq","request","XMLHttpRequest","open","send","JSON","stringify","data","callStop","handleMove","stick","leftWheel4Bit","rightWheel4Bit","combined8BitValue","console","log","handleStop","children","pos","move","stop","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/pingh/OneDrive/Desktop/CG2271/Project/js/src/Test.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Joystick } from \"react-joystick-component\";\r\n\r\n// Function to convert joystick positions to wheel speeds\r\nfunction joystickToWheelSpeeds(x, y) {\r\n  // Normalize the speeds to ensure they are within the maximum possible range\r\n  const angle = Math.atan2(y, x) % (Math.PI / 2);\r\n  var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\r\n\r\n  // Reverse x direction if moving backward\r\n  if (y < 0) {\r\n    x = -x;\r\n    maxSpeed = 2 + maxSpeed;\r\n  }\r\n\r\n  // Calculate the wheel speeds\r\n  let leftWheelSpeed = y + x;\r\n  let rightWheelSpeed = y - x;\r\n\r\n  // Avoid division by zero in normalization\r\n  if (maxSpeed !== 0) {\r\n    leftWheelSpeed /= maxSpeed;\r\n    rightWheelSpeed /= maxSpeed;\r\n  }\r\n\r\n  return {\r\n    leftWheelSpeed: leftWheelSpeed,\r\n    rightWheelSpeed: rightWheelSpeed,\r\n  };\r\n}\r\n\r\n// Function to map wheel speed to a 4-bit value (0-15)\r\nfunction mapSpeedTo4Bit(speed) {\r\n  return Math.round((speed + 1) * 7.5);\r\n}\r\n\r\n// Function to combine two 4-bit values into a single 8-bit value\r\nfunction combine4BitValues(left4Bit, right4Bit) {\r\n  return (left4Bit << 4) | right4Bit;\r\n}\r\n\r\n\r\n\r\nexport function Test() {\r\n  const [joystickPos, setJoystickPos] = useState({ x: 0, y: 0 });\r\n  const [binarySpeed, setBinarySpeed] = useState(119);\r\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\r\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\r\n  const [currTime, setCurrTime] = useState(Date.now());\r\n\r\n  function callReq() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({data : binarySpeed}))\r\n  }\r\n\r\n  function callStop() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({data : \"01110111\"}))\r\n  }\r\n\r\n  const handleMove = (stick) => {\r\n    setJoystickPos({ x: stick.x, y: stick.y });\r\n\r\n    const { leftWheelSpeed, rightWheelSpeed } = joystickToWheelSpeeds(\r\n      stick.x,\r\n      stick.y\r\n    );\r\n    \r\n    // Convert wheel speeds to 4-bit values\r\n    const leftWheel4Bit = mapSpeedTo4Bit(leftWheelSpeed);\r\n    const rightWheel4Bit = mapSpeedTo4Bit(rightWheelSpeed);\r\n    setLeftWheelSpeed(leftWheel4Bit);\r\n    setRightWheelSpeed(rightWheel4Bit);\r\n    const combined8BitValue = combine4BitValues(leftWheel4Bit, rightWheel4Bit);\r\n\r\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\r\n    setBinarySpeed(combined8BitValue);\r\n    if (Date.now() - currTime > 1000) {\r\n      setCurrTime(Date.now());\r\n      callReq();\r\n    } \r\n    console.log(\"Combined 8-bit Value (Binary):\", combined8BitValue);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setJoystickPos({ x: 0, y: 0 });\r\n    setBinarySpeed(\"01110111\");\r\n    callStop();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Joystick pos={joystickPos} move={handleMove} stop={handleStop} />\r\n      <div className=\"{text-align: center;}\">\r\n        <p>Binary Speed: {binarySpeed}</p>\r\n        <p>Left Speed: {leftWheelSpeed}</p>\r\n        <p>Right Speed: {rightWheelSpeed}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}