{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pingh\\\\OneDrive\\\\Desktop\\\\CG2271\\\\Project\\\\js\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport \"./joystick.css\";\n\n// Function to convert joystick positions to wheel speeds\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction joystickToWheelSpeeds(x, y) {\n  const angle = Math.atan2(y, x) / Math.PI * 180;\n  console.log(angle);\n  if (angle < 0) {\n    if (angle > -45) {\n      x = 1;\n      y = 0;\n    } else if (angle > -135) {\n      x = 0;\n      y = -1;\n    } else {\n      x = -1;\n      y = 0;\n    }\n  }\n  let leftWheelSpeed = y + x;\n  let rightWheelSpeed = y - x;\n\n  // Avoid division by zero in normalization\n  // const angle = Math.atan2(y, x) % (Math.PI / 2);\n  // var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\n  const maxSpeed = Math.max(Math.abs(leftWheelSpeed), Math.abs(rightWheelSpeed), 1);\n  if (maxSpeed !== 0) {\n    leftWheelSpeed /= maxSpeed;\n    rightWheelSpeed /= maxSpeed;\n  }\n  return {\n    leftWheelSpeed: leftWheelSpeed,\n    rightWheelSpeed: rightWheelSpeed\n  };\n}\nexport function Test() {\n  _s();\n  const [joystickPos, setJoystickPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [binarySpeed, setBinarySpeed] = useState(119);\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\n  const [currTime, setCurrTime] = useState(Date.now());\n  function callReq() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: binarySpeed\n    }));\n  }\n  function callStop() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: \"01110111\"\n    }));\n  }\n  const handleMove = stick => {\n    setJoystickPos({\n      x: stick.x,\n      y: stick.y\n    });\n    const {\n      leftWheelSpeed,\n      rightWheelSpeed\n    } = joystickToWheelSpeeds(stick.x, stick.y);\n\n    // Convert wheel speeds to 4-bit values\n    const left4Bit = Math.round((leftWheelSpeed + 1) * 7.5);\n    const right4Bit = Math.round((rightWheelSpeed + 1) * 7.5);\n    const combined8BitValue = left4Bit << 4 | right4Bit;\n    setLeftWheelSpeed(((combined8BitValue >> 4) - 7) / 8.0);\n    setRightWheelSpeed(((combined8BitValue & 0b00001111) - 7) / 8.0);\n\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\n    setBinarySpeed(combined8BitValue);\n    if (Date.now() - currTime > 1000) {\n      setCurrTime(Date.now());\n      callReq();\n    }\n    console.log(\"Combined 8-bit Value (Binary):\", combined8BitValue);\n  };\n  const handleStop = () => {\n    setJoystickPos({\n      x: 0,\n      y: 0\n    });\n    setBinarySpeed(\"01110111\");\n    setLeftWheelSpeed(0);\n    setRightWheelSpeed(0);\n    callStop();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"elem-to-center\",\n    children: [/*#__PURE__*/_jsxDEV(Joystick, {\n      pos: joystickPos,\n      move: handleMove,\n      stop: handleStop,\n      stickSize: 100,\n      size: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Binary Speed: \", binarySpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Left Speed in KL25: \", leftWheelSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Right Speed in KL25: \", rightWheelSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"rx/csifYshLgmvG0+1FwVgxnJyQ=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","Joystick","jsxDEV","_jsxDEV","joystickToWheelSpeeds","x","y","angle","Math","atan2","PI","console","log","leftWheelSpeed","rightWheelSpeed","maxSpeed","max","abs","Test","_s","joystickPos","setJoystickPos","binarySpeed","setBinarySpeed","setLeftWheelSpeed","setRightWheelSpeed","currTime","setCurrTime","Date","now","callReq","request","XMLHttpRequest","open","send","JSON","stringify","data","callStop","handleMove","stick","left4Bit","round","right4Bit","combined8BitValue","handleStop","id","children","pos","move","stop","stickSize","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pingh/OneDrive/Desktop/CG2271/Project/js/src/Test.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Joystick } from \"react-joystick-component\";\r\nimport \"./joystick.css\"\r\n\r\n// Function to convert joystick positions to wheel speeds\r\nfunction joystickToWheelSpeeds(x, y) {\r\n  \r\n  const angle = Math.atan2(y, x) / Math.PI * 180;\r\n  console.log(angle)\r\n  if (angle < 0) {\r\n    if (angle > -45) {\r\n      x = 1;\r\n      y = 0;\r\n    } else if (angle > -135) {\r\n      x = 0;\r\n      y = -1;\r\n    } else {\r\n      x = -1;\r\n      y = 0;\r\n    }\r\n  }\r\n  \r\n  let leftWheelSpeed = y + x;\r\n  let rightWheelSpeed = y - x;\r\n\r\n  // Avoid division by zero in normalization\r\n  // const angle = Math.atan2(y, x) % (Math.PI / 2);\r\n  // var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\r\n  const maxSpeed = Math.max(Math.abs(leftWheelSpeed), Math.abs(rightWheelSpeed), 1);\r\n  if (maxSpeed !== 0) {\r\n    leftWheelSpeed /= maxSpeed;\r\n    rightWheelSpeed /= maxSpeed;\r\n  }\r\n\r\n  return {\r\n    leftWheelSpeed: leftWheelSpeed,\r\n    rightWheelSpeed: rightWheelSpeed,\r\n  };\r\n}\r\n\r\nexport function Test() {\r\n  const [joystickPos, setJoystickPos] = useState({ x: 0, y: 0 });\r\n  const [binarySpeed, setBinarySpeed] = useState(119);\r\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\r\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\r\n  const [currTime, setCurrTime] = useState(Date.now());\r\n\r\n  function callReq() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({data : binarySpeed}))\r\n  }\r\n\r\n  function callStop() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({data : \"01110111\"}))\r\n  }\r\n\r\n  const handleMove = (stick) => {\r\n    setJoystickPos({ x: stick.x, y: stick.y });\r\n\r\n    const { leftWheelSpeed, rightWheelSpeed } = joystickToWheelSpeeds(\r\n      stick.x,\r\n      stick.y\r\n    );\r\n    \r\n    // Convert wheel speeds to 4-bit values\r\n    const left4Bit = Math.round((leftWheelSpeed + 1) * 7.5);\r\n    const right4Bit = Math.round((rightWheelSpeed + 1) * 7.5);\r\n    const combined8BitValue = (left4Bit << 4) | right4Bit;\r\n    setLeftWheelSpeed(((combined8BitValue >> 4) - 7) / 8.0);\r\n    setRightWheelSpeed(((combined8BitValue & 0b00001111) - 7) / 8.0);\r\n\r\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\r\n    setBinarySpeed(combined8BitValue);\r\n    if (Date.now() - currTime > 1000) {\r\n      setCurrTime(Date.now());\r\n      callReq();\r\n    } \r\n    console.log(\"Combined 8-bit Value (Binary):\", combined8BitValue);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setJoystickPos({ x: 0, y: 0 });\r\n    setBinarySpeed(\"01110111\");\r\n    setLeftWheelSpeed(0);\r\n    setRightWheelSpeed(0);\r\n    callStop();\r\n  };\r\n\r\n  return (\r\n    <div id=\"elem-to-center\">\r\n      <Joystick pos={joystickPos} move={handleMove} stop={handleStop} stickSize={100} size={300}/>\r\n      <p>Binary Speed: {binarySpeed}</p>\r\n      <p>Left Speed in KL25: {leftWheelSpeed}</p>\r\n      <p>Right Speed in KL25: {rightWheelSpeed}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}